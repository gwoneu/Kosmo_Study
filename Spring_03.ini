- JSP (Java Server Pages)
HTML 코드에 Java 코드를 삽입하여 동적인 웹 페이지를 생성하는 기술
JSP는 자바 서블릿 기반으로 클라이언트의 요청에 따라 HTML, XML 등의 웹 문서를 생성한다.

+ 동적 웹 컨텐츠 생성 : JSP는 사용자의 요청에 따라 실시간으로 변하는 웹 페이지를 만드는데 사용된다.
+ 프레젠테이션 로직 구현 : 비즈니스 로직과 프레젠테이션 로직을 분리 개발 가능
JSP 페이지에서 HTML 태그와 Java 코드를 함께 작성하여 로직을 쉽게 구현할 수 있다.
HTML은 정적인 웹 페이지만 개발 가능하지만, JSP에서 Java를 사용하여 모든 기능을 활용할 수 있다.
+ MVC(Model-View-COntroller) 패턴 : JSP는 주로 View 역할
+ 세션 관리 : JSP는 HTTP 세션을 관리하는 기능을 제공한다.

- JSP, 서블릿 차이점
+ 코드
서블릿은 순수한 자바 코드로 구성, HTML 태그는 문자열 형태로 출력
JSP는 HTML 안에 자바 코드를 추가하여 웹 페이지 생성 가능

+ 로직
서블릿은 비즈니스 로직을 처리하는데 주로 사용된다.
JSP은 프레젠테이션 로직, 클라이언트에게 보여지는 View에 초점을 맞추어 사용된다.

+ 변환 및 실행
서블릿은 클라이언트의 요청마다 해당 메소드(doGet(), doPost() 등)이 호출된다.
JSP는 처음 요청 시 내부적으로 서블릿으로 변환 후에 컴파일되어 실행된다.
동일한 요청이 들어올 시 이미 컴파일된 서블릿 코드가 실행된다.

- JSP 작동 방식
클라이언트가 JSP 페이지를 요청하면 웹 컨테이너(Tomcat)는 해당 JSP 파일을 서블릿 클래스로 변환하고 컴파일한다.
컴파일된 서블릿은 클라이언트의 요청 처리 후 응답을 반환한다.

클라이언트 요청 -> JSP 파일 확인 -> 서블릿 변환 및 컴파일 -> 서블릿 실행 -> 응답 생성 및 반환
-> 재요청 처리

- JSP 지시어(Directives)
+ page 지시어 : 페이지 전체에 적용되는 속성 (import, error page, 세션 사용 여부, 버퍼 크기)
<%@ page language="java" contentType="text/html; charset=utf-8" pageEncoding="UTF-8" %>

+ include 지시어 : 다른 파일을 현재 JSP페이지에 포함시킨다.
<%@ include file="header.jsp" %>

+ taglib : 태그 라이브러리를 현재 JSP 페이지에서 사용할 수 있도록 한다.
<%@ tablib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

- 스크립트 요소(Scripting Elements) : JSP 페이지 내에 자바 코드를 삽입하는데 사용된다.

+ 표현식(Expression) : <%= %> 사이에 위치한 코드는 자바에서의 결과 값을 반환하고,
최종적으로 HTML에 포함된다. 세미콜론을 붙이지 않는다.
<%= "Hello World" %>

+ 스크립트릿(Scriptlet) : <% %> 사이에 작성된 자바 코드는 서블릿 _jspService() 메소드에서 실행
여기서 변수를 선언하거나 로직을 수행할 수 있다.
<% String name = "Hello"; %>
<% for(int i = 0; i<10; i++) { %>
    <p><%= i %></p>
<% } %>

+ 선언(Declaration) : <%! %> 사이의 자바 코드는 서블릿 클래스 멤버 변수, 메서드로 선언된다.
<%! int count = 0; %>